********************************************************************************************************************************************
STEP 3.1:
    1/6 INTRODUCTION:
        Azure Pipelines is a fully featured service used to create cross-platform CI (Continuous Integration) and CD (Continuous Deployment).
    2/6 Explore the concept of pipelines in DevOps:
        Business demands continuous delivery of value.
        Think of it as a pipeline. The pipeline breaks down the software delivery process into stages.
        Build automation and continuous integration:
            The pipeline starts by building the binaries to create the deliverables passed to the following stages.
        Test automation:
            The new version of an application is rigorously tested throughout this stage to ensure that it meets all wished system qualities.
        Deployment automation:
            A deployment is required every time the application is installed in an environment for testing, but the most critical moment for deployment automation is rollout time.
            The deployment is automated, allowing for the reliable delivery of new functionality to users within minutes if needed.
        Your pipeline needs platform provisioning and configuration management:
            The deployment pipeline is supported by platform provisioning and system configuration management.
            It allows teams to create, maintain, and tear down complete environments automatically or at the push of a button.
        Orchestrating it all: release and pipeline orchestration:
            The multiple stages in a deployment pipeline involve different groups of people collaborating and supervising the release of the new version of your application.
    3/6 Describe Azure Pipelines:
        Azure Pipelines is a cloud service that automatically builds and tests your code project and makes it available to other users.
        Azure Pipelines combines continuous integration (CI) and continuous delivery (CD) to test and build your code and ship it to any target constantly and consistently.
        Version control systems:
            Before you use continuous integration and continuous delivery practices for your applications, you must have your source code in a version control system.
            Azure Pipelines integrates with GitHub, GitLab, Azure Repos, Bitbucket, and Subversion.
        Package formats:
            To produce packages that others can consume, you can publish NuGet, npm, or Maven packages to the built-in package management repository in Azure Pipelines.
            You also can use any other package management repository of your choice.
    4/6 Understand Azure Pipelines key terms:
        Agent:
            When your build or deployment runs, the system begins one or more jobs.
            An agent is installable software that runs a build or deployment job.
        Artifact:
            An artifact is a collection of files or packages published by a build.
            Artifacts are made available for the tasks, such as distribution or deployment.
        Build:
            A build represents one execution of a pipeline. It collects the logs associated with running the steps and the test results.
        Continuous delivery:
            Continuous delivery (CD) (also known as Continuous Deployment) is a process by which code is built, tested, and deployed to one or more test and production stages.
        Continuous integration:
            Continuous integration (CI) is the practice used by development teams to simplify the testing and building of code.
        Deployment target:
            A deployment target is a virtual machine, container, web app, or any service used to host the developed application.
            A pipeline might deploy the app to one or more deployment targets after the build is completed and tests are run.
        Job:
            A build contains one or more jobs. 
            Most jobs run on an agent.
            A job represents an execution boundary of a set of steps. 
            All the steps run together on the same agent.
            ! For example, you might build two configurations - x86 and x64. In this case, you have one build and two jobs. !
        Pipeline:
            A pipeline defines the continuous integration and deployment process for your app. 
            It's made up of steps called tasks.
            It can be thought of as a script that describes how your test, build, and deployment steps are run.
        Release:
            When you use the visual designer, you can create a release or a build pipeline.
            A release is a term used to describe one execution of a release pipeline.
        Stage:
            Stages are the primary divisions in a pipeline: "build the app," "run integration tests," and "deploy to user acceptance testing" are good examples of stages.
        Task:
            A task is the building block of a pipeline.
            For example, a build pipeline might consist of build and test tasks. A release pipeline consists of deployment tasks.
            Each task runs a specific job in the pipeline.
        Trigger:
            A trigger is set up to tell the pipeline when to run.
    5/6 TEST:
    6/6 SUMMARY:
********************************************************************************************************************************************
STEP 3.2:
    1/13 INTRODUCTION:
        This module explores the differences between Microsoft-hosted and self-hosted agents, detail job types, and introduces agent pool configuration.
        Understand typical situations to use agent pools and how to manage their security.
    2/13 Choose between Microsoft-hosted versus self-hosted agents:
        To build your code or deploy your software, you generally need at least one agent.
        An agent is an installable software that runs one build or deployment job at a time.
        Microsoft-hosted agent:
            If your pipelines are in Azure Pipelines, then you've got a convenient option to build and deploy using a Microsoft-hosted agent.
            Each time a pipeline is run, a new virtual machine (instance) is provided. The virtual machine is discarded after one use.
            A Microsoft-hosted agent has job time limits.
        Self-hosted agent:
            An agent that you set up and manage on your own to run build and deployment jobs is a self-hosted agent.
    3/13 Explore job types:
        In Azure DevOps, there are four types of jobs available:
            - Agent pool jobs.
            - Container jobs.
            - Deployment group jobs.
            - Agentless jobs.
    4/13 Introduction to agent pools:
        Instead of managing each agent individually, you organize agents into agent pools. An agent pool defines the sharing boundary for all agents in that pool.
        To share an agent pool with multiple projects, use an organization scope agent pool and add them in each of those projects, add an existing agent pool, and choose the organization agent pool.
        If you create a new agent pool, you can automatically grant access permission to all pipelines.
    5/13 Explore predefined agent pool:
        Azure Pipelines provides a pre-defined agent pool-named Azure Pipelines with Microsoft-hosted agents.
        By default, all contributors in a project are members of the User role on each hosted pool.
        It allows every contributor to the author and runs build and release pipelines using a Microsoft-hosted pool.
    6/13 Understand typical situations for agent pools:
        If you've got many agents intended for different teams or purposes, you might want to create more pools, as explained below.
    7/13 Communicate with Azure Pipelines:
        The agent communicates with Azure Pipelines to determine which job to run and reports the logs and job status.
        ! The agent always starts this communication. All the messages from the agent to Azure Pipelines over HTTPS depend on how you configure the agent. !
        The user registers an agent with Azure Pipelines by adding it to an agent pool.
        You must be an agent pool administrator to register an agent.
        Once the registration is complete, the agent downloads a listener OAuth token and uses it to listen to the job queue.
        There are 2 types of tokens:
            - Listener OAuth token
            - Job Specific token
        The payload of the messages exchanged between the agent and Azure Pipelines are secured using asymmetric encryption.
            Each agent has a public-private key pair, and the public key is exchanged with the server during registration.
    8/13 Communicate to deploy to target servers:
        When you use the agent to deploy artifacts to a set of servers, it must-have "line of sight" connectivity to those servers.
        ! The Microsoft-hosted agent pools, by default, have connectivity to Azure websites and servers running in Azure. !
    9/13 Examine other considerations:
        Authentication:
            To register an agent, you need to be a member of the administrator role in the agent pool.
            The identity of the agent pool administrator is only required at the time of registration.
            Also, you must be a local administrator on the server to configure the agent.
            Your agent can authenticate to Azure DevOps using one of the following methods:
                - Personal access token (PAT):
                    Generate and use a PAT to connect an agent with Azure Pipelines.
                - Interactive versus service:
                    You can run your agent as either a service or an interactive process.
                    Whether you run an agent as a service or interactively, you can choose which account you use to run the agent.

                !
                    After configuring the agent, we recommend you first try it in interactive mode to ensure it works. 
                    Then, we recommend running the agent in one of the following modes so that it reliably remains to run for production use. 
                    These modes also ensure that the agent starts automatically if the machine is restarted.
                !
        Agent version and upgrades:
            Microsoft updates the agent software every few weeks in Azure Pipelines.
    10/13 Describe security of agent pools:
        Understanding how security works for agent pools helps you control sharing and use of agents.
        Azure Pipelines:
            In Azure Pipelines, roles are defined on each agent pool. Membership in these roles governs what operations you can do on an agent pool.
                - Reader: Members of this role can view the organization's agent pool and agents.
                    You typically use it to add operators that are responsible for monitoring the agents and their health.
                - Service Account: Members of this role can use the organization agent pool to create a project agent pool in a project.
                - Administrator: Also, with all the above permissions, members of this role can register or unregister agents from the organization's agent pool.
                ...
    11/13 Configure agent pools and understanding pipeline styles:
        ! LAB !
        1- Task 1: (skip if done) Create and configure the team project.
            In this task, you will create an eShopOnWeb Azure DevOps project to be used by several labs.
        2- Task 2: (skip if done) Import eShopOnWeb Git Repository
            In this task you will import the eShopOnWeb Git repository that will be used by several labs.
        3- Exercise 1: Author YAML-based Azure Pipelines
            In this exercise, you will create an application lifecycle build pipeline, using a YAML-based template.
        4- Exercise 2: Manage Azure DevOps agent pools:
            In this exercise, you will implement a self-hosted Azure DevOps agent.
            In this task, you will configure your lab Virtual Machine as an Azure DevOps self-hosting agent and use it to run a build pipeline.

            4-1 Task 1: Configure an Azure DevOps self-hosting agent:
                Creating new access token.
            4-2 



